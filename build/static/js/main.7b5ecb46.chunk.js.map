{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","event","onDelete","id","CreateArea","useState","note","setNote","handleChange","target","name","value","prevNote","onChange","placeholder","rows","preventDefault","onAdd","App","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","newNote","map","key","ReactDOM","render","document","getElementById"],"mappings":"gMAUeA,MARf,WACE,OACE,gCACE,wCCMSC,MATf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,gCACE,+CAAgBF,KCWPG,MAff,SAAcC,GAMZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QARZ,SAAqBC,GACnBL,EAAMM,SAASN,EAAMO,MAOnB,Y,cCwCSC,MAlDf,SAAoBR,GAClB,MAAwBS,mBAAS,CAC/BP,MAAO,GACPC,QAAS,KAFX,mBAAOO,EAAP,KAAaC,EAAb,KAMA,SAASC,EAAaP,GACpB,MAAwBA,EAAMQ,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdJ,GAAQ,SAACK,GACP,OAAO,2BACFA,GADL,kBAEGF,EAAOC,OAgBd,OACE,6BACE,8BACE,2BACED,KAAK,QACLG,SAAUL,EACVG,MAAOL,EAAKR,MACZgB,YAAY,UAEd,8BACEJ,KAAK,UACLG,SAAUL,EACVG,MAAOL,EAAKP,QACZe,YAAY,iBACZC,KAAK,MAEP,4BAAQf,QA3Bd,SAAoBC,GAClBA,EAAMe,iBACNT,EAAQ,CACNT,MAAO,GACPC,QAAS,KAGXH,EAAMqB,MAAMX,KAoBR,UCHOY,MArCf,WACE,MAA0Bb,mBAAS,IAAnC,mBAAOc,EAAP,KAAcC,EAAd,KAQA,SAASC,EAAWlB,GAClBiB,GAAS,SAACE,GACR,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GACjC,OAAOA,IAAUtB,QAKvB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYc,MAjBhB,SAAiBS,GACfN,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBI,UAgBrBP,EAAMQ,KAAI,SAACH,EAAUC,GACpB,OACE,kBAAC,EAAD,CACEG,IAAKH,EACLtB,GAAIsB,EACJ3B,MAAO0B,EAAS1B,MAChBC,QAASyB,EAASzB,QAClBG,SAAUmB,OAIhB,kBAAC,EAAD,QClCNQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7b5ecb46.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Keeper</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\n\nfunction Note(props) {\n\n  function handleClick(event) {\n    props.onDelete(props.id);\n  }\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={handleClick}>DELETE</button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\n\nfunction CreateArea(props) {\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\",\n  });\n\n  //for internal note structure\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value,\n      }\n    });\n  }\n\n  function submitNote(event){\n    event.preventDefault();\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    //for prohibiting refreshing of form data\n    props.onAdd(note);\n\n  }\n\n  return (\n    <div>\n      <form >   \n        <input\n          name=\"title\"\n          onChange={handleChange}\n          value={note.title}\n          placeholder=\"Title\"\n        />\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n        />\n        <button onClick={submitNote}>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    setNotes((prevNotes) => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes((prevNotes) => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}